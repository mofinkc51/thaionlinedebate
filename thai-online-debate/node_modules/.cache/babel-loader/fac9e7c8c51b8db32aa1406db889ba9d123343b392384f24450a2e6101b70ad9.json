{"ast":null,"code":"import Swal from 'sweetalert2';\nexport function user_validation(username, min, max) {\n  var username_len = username.length;\n  if (username_len == 0 || username_len < min || username_len > max) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: \"Username must be lenght between \" + min + \" to \" + max\n    });\n    return false;\n  }\n  return true;\n}\n//pass\nexport function password_validation(password, min, max) {\n  var password_len = password.value.length;\n  if (password_len == 0 || password_len < min || password_len > max) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: \"Password must be lenght between \" + min + \" to \" + max\n    });\n    return false;\n  }\n  return true;\n}\nexport function phone_validation(phone) {\n  var phone_len = phone.length;\n  if (phone_len == 0) {\n    return true;\n  }\n  if (phone_len > 10 || phone_len < 10) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: \"Phone number must be 10 digits\"\n    });\n    return false;\n  }\n  return true;\n}\n//letter\nexport function allletter(inputtxt) {\n  var letters = /^[A-Za-z]+$/;\n  if (inputtxt.match(letters)) {\n    return true;\n  } else {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: \"Please \" + inputtxt.placeholder + \" with alphabet characters only\"\n    });\n    return false;\n  }\n}\n\n//mail\nexport function email_validation(email) {\n  var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  if (email.match(mailformat)) {\n    return true;\n  } else {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: \"You have entered an invalid email address!\"\n    });\n    return false;\n  }\n}","map":{"version":3,"names":["Swal","user_validation","username","min","max","username_len","length","fire","icon","title","text","password_validation","password","password_len","value","phone_validation","phone","phone_len","allletter","inputtxt","letters","match","placeholder","email_validation","email","mailformat"],"sources":["C:/Users/Synonym/Documents/GitHub/thaionlinedebate/thai-online-debate/src/checked.js"],"sourcesContent":["import Swal from 'sweetalert2'\r\n\r\n\r\nexport function user_validation(username, min ,max) {\r\n    var username_len = username.length;\r\n    if (username_len == 0 || username_len < min || username_len > max) {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: (\"Username must be lenght between \" + min + \" to \" + max)\r\n          })\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//pass\r\nexport function password_validation(password, min ,max) {\r\n    var password_len = password.value.length;\r\n    if (password_len == 0 || password_len < min || password_len > max) {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: (\"Password must be lenght between \" + min + \" to \" + max)\r\n          })\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexport function phone_validation(phone) {\r\n    var phone_len = phone.length;\r\n    if (phone_len == 0) {\r\n        return true;\r\n    }\r\n    if (phone_len > 10 || phone_len < 10) {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: (\"Phone number must be 10 digits\")\r\n          })\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//letter\r\nexport function allletter(inputtxt) {\r\n    var letters = /^[A-Za-z]+$/;\r\n    if(inputtxt.match(letters)) {\r\n        return true;\r\n    } else {        \r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text:(\"Please \"+ inputtxt.placeholder + \" with alphabet characters only\")\r\n        })\r\n        return false;\r\n    }\r\n}\r\n\r\n//mail\r\nexport function email_validation(email) {\r\n    var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if (email.match(mailformat)) {\r\n        return true;\r\n    }\r\n    else {        \r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: (\"You have entered an invalid email address!\")\r\n        })\r\n        return false;\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,IAAI,MAAM,aAAa;AAG9B,OAAO,SAASC,eAAeA,CAACC,QAAQ,EAAEC,GAAG,EAAEC,GAAG,EAAE;EAChD,IAAIC,YAAY,GAAGH,QAAQ,CAACI,MAAM;EAClC,IAAID,YAAY,IAAI,CAAC,IAAIA,YAAY,GAAGF,GAAG,IAAIE,YAAY,GAAGD,GAAG,EAAE;IAC/DJ,IAAI,CAACO,IAAI,CAAC;MACNC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAG,kCAAkC,GAAGP,GAAG,GAAG,MAAM,GAAGC;IAC7D,CAAC,CAAC;IACJ,OAAO,KAAK;EAChB;EACA,OAAO,IAAI;AACf;AACA;AACA,OAAO,SAASO,mBAAmBA,CAACC,QAAQ,EAAET,GAAG,EAAEC,GAAG,EAAE;EACpD,IAAIS,YAAY,GAAGD,QAAQ,CAACE,KAAK,CAACR,MAAM;EACxC,IAAIO,YAAY,IAAI,CAAC,IAAIA,YAAY,GAAGV,GAAG,IAAIU,YAAY,GAAGT,GAAG,EAAE;IAC/DJ,IAAI,CAACO,IAAI,CAAC;MACNC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAG,kCAAkC,GAAGP,GAAG,GAAG,MAAM,GAAGC;IAC7D,CAAC,CAAC;IACJ,OAAO,KAAK;EAChB;EACA,OAAO,IAAI;AACf;AACA,OAAO,SAASW,gBAAgBA,CAACC,KAAK,EAAE;EACpC,IAAIC,SAAS,GAAGD,KAAK,CAACV,MAAM;EAC5B,IAAIW,SAAS,IAAI,CAAC,EAAE;IAChB,OAAO,IAAI;EACf;EACA,IAAIA,SAAS,GAAG,EAAE,IAAIA,SAAS,GAAG,EAAE,EAAE;IAClCjB,IAAI,CAACO,IAAI,CAAC;MACNC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAG;IACT,CAAC,CAAC;IACJ,OAAO,KAAK;EAChB;EACA,OAAO,IAAI;AACf;AACA;AACA,OAAO,SAASQ,SAASA,CAACC,QAAQ,EAAE;EAChC,IAAIC,OAAO,GAAG,aAAa;EAC3B,IAAGD,QAAQ,CAACE,KAAK,CAACD,OAAO,CAAC,EAAE;IACxB,OAAO,IAAI;EACf,CAAC,MAAM;IACHpB,IAAI,CAACO,IAAI,CAAC;MACNC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE,SAAS,GAAES,QAAQ,CAACG,WAAW,GAAG;IAC5C,CAAC,CAAC;IACF,OAAO,KAAK;EAChB;AACJ;;AAEA;AACA,OAAO,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EACpC,IAAIC,UAAU,GAAG,+CAA+C;EAChE,IAAID,KAAK,CAACH,KAAK,CAACI,UAAU,CAAC,EAAE;IACzB,OAAO,IAAI;EACf,CAAC,MACI;IACDzB,IAAI,CAACO,IAAI,CAAC;MACNC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAG;IACX,CAAC,CAAC;IACF,OAAO,KAAK;EAChB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}