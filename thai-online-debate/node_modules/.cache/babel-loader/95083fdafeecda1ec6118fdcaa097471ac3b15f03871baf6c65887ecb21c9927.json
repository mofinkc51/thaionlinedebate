{"ast":null,"code":"import SweetAlert2 from 'react-sweetalert2';\nexport function user_validation(username, min, max) {\n  var username_len = username.value.length;\n  if (username_len == 0 || username_len < min || username_len > max) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: \"Username cannot be blank /lenght between \" + min + \" to \" + max\n    });\n    username.focus();\n    return false;\n  }\n  return true;\n}\n//pass\nfunction password_validation(password, min, max) {\n  var password_len = password.value.length;\n  if (password_len == 0 || password_len < min || password_len > max) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: \"Password cannot be blank /lenght between \" + min + \" to \" + max\n    });\n    password.focus();\n    return false;\n  }\n  return true;\n}\n//letter\nfunction allletter(inputtxt) {\n  var letters = /^[A-Za-z]+$/;\n  if (inputtxt.value.match(letters)) {\n    return true;\n  } else {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: \"Please \" + inputtxt.placeholder + \" with alphabet characters only\"\n    });\n    inputtxt.focus();\n    return false;\n  }\n}\n\n//mail\nfunction email_validation(email) {\n  var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  if (email.value.match(mailformat)) {\n    return true;\n  } else {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: \"You have entered an invalid email address!\"\n    });\n    email.focus();\n    return false;\n  }\n}\n//country\nfunction country_validation(country) {\n  if (country.value == \"\") {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: \"Please Select your country\"\n    });\n    country.focus();\n    return false;\n  }\n  return true;\n}\n//zip\nfunction zip_validation(zip) {\n  var numbers = /^[0-9]+$/;\n  if (zip.value.match(numbers)) {\n    return true;\n  } else {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: \"Zip cannot be blank / numbers only\"\n    });\n    zip.focus();\n    return false;\n  }\n}\n//language\nfunction language_validation(language) {\n  if (language[0].checked || language[1].checked) {\n    return true;\n  } else {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: \"Please select your language\"\n    });\n    return false;\n  }\n}\n//gender\nfunction gender_validation(gender) {\n  if (gender[0].checked || gender[1].checked || gender[2].checked) {\n    return true;\n  } else {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: \"Please select your gender\"\n    });\n    return false;\n  }\n}","map":{"version":3,"names":["SweetAlert2","user_validation","username","min","max","username_len","value","length","Swal","fire","icon","title","text","focus","password_validation","password","password_len","allletter","inputtxt","letters","match","placeholder","email_validation","email","mailformat","country_validation","country","zip_validation","zip","numbers","language_validation","language","checked","gender_validation","gender"],"sources":["C:/Users/mofin/Desktop/Final Project/thaionlinedebate/thai-online-debate/src/checked.js"],"sourcesContent":["\r\nimport SweetAlert2 from 'react-sweetalert2';\r\n\r\n\r\n\r\nexport function user_validation(username, min ,max) {\r\n    var username_len = username.value.length;\r\n    if (username_len == 0 || username_len < min || username_len > max) {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: (\"Username cannot be blank /lenght between \" + min + \" to \" + max)\r\n          })\r\n        username.focus();\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//pass\r\nfunction password_validation(password, min ,max) {\r\n    var password_len = password.value.length;\r\n    if (password_len == 0 || password_len < min || password_len > max) {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: (\"Password cannot be blank /lenght between \" + min + \" to \" + max)\r\n          })\r\n        password.focus();\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//letter\r\nfunction allletter(inputtxt) {\r\n    var letters = /^[A-Za-z]+$/;\r\n    if(inputtxt.value.match(letters)) {\r\n        return true;\r\n    } else {        \r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text:(\"Please \"+ inputtxt.placeholder + \" with alphabet characters only\")\r\n        })\r\n        inputtxt.focus();\r\n        return false;\r\n    }\r\n}\r\n\r\n//mail\r\nfunction email_validation(email) {\r\n    var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if (email.value.match(mailformat)) {\r\n        return true;\r\n    }\r\n    else {        \r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: (\"You have entered an invalid email address!\")\r\n        })\r\n        email.focus();\r\n        return false;\r\n    }\r\n}\r\n//country\r\nfunction country_validation(country) {\r\n    if (country.value == \"\") {        \r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text:(\"Please Select your country\")\r\n    })\r\n        country.focus();\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//zip\r\nfunction zip_validation(zip) {\r\n    var numbers = /^[0-9]+$/;\r\n    if (zip.value.match(numbers)) {\r\n        return true;\r\n    } else {        \r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text:(\"Zip cannot be blank / numbers only\")\r\n        })\r\n        zip.focus();\r\n        return false;\r\n    }\r\n}\r\n//language\r\nfunction language_validation(language) {\r\n    if (language[0].checked || language[1].checked) {\r\n        return true;\r\n    } else {        \r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text:(\"Please select your language\")\r\n        })\r\n        return false;\r\n        \r\n    }\r\n\r\n}\r\n//gender\r\nfunction gender_validation(gender) {\r\n    if (gender[0].checked || gender[1].checked || gender[2].checked) {\r\n        return true;\r\n    } else {        \r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text:(\"Please select your gender\")\r\n        })\r\n        return false;\r\n        \r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}